{"version":3,"file":"barloader.component.js","sourceRoot":"","sources":["../src/barloader.component.ts"],"names":[],"mappings":";AAAA,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,MAAM,aAAa,CAAC;AACtD,OAAO,EAAE,IAAI,EAAE,MAAM,mBAAmB,CAAC;AACzC,OAAO,eAAe,MAAM,oBAAoB,CAAC;AACjD,OAAO,QAAQ,MAAM,sBAAsB,CAAC;AAG5C,IAAa,SAAS,GAAtB,MAAa,SAAU,SAAQ,IAAI;IAAnC;;QAG+B,aAAQ,GAAC,KAAK,CAAC;QACf,UAAK,GAAC,KAAK,CAAC;QACZ,mBAAc,GAAC,KAAK,CAAC;QACrB,cAAS,GAAG,KAAK,CAAC;QAClB,kBAAa,GAAG,KAAK,CAAC;QACvB,UAAK,GAAC,CAAC,CAAC;QACR,UAAK,GAAG,EAAE,CAAC;QACV,aAAQ,GAAG,KAAK,CAAC;QACjB,YAAO,GAAG,KAAK,CAAC;QAChB,aAAQ,GAAG,KAAK,CAAC;IAKhD,CAAC;IAHW,MAAM;QACd,OAAO,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAC7B,CAAC;CACF,CAAA;AAhBe,yBAAe,GAAG,eAAe,CAAC;AAEnB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;2CAAgB;AACf;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;wCAAa;AACZ;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;iDAAsB;AACrB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;4CAAmB;AAClB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;gDAAuB;AACvB;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;wCAAS;AACR;IAA3B,QAAQ,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC;;wCAAY;AACV;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;2CAAkB;AACjB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;0CAAiB;AAChB;IAA5B,QAAQ,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC;;2CAAkB;AAZnC,SAAS;IADrB,aAAa,CAAC,cAAc,CAAC;GACjB,SAAS,CAiBrB;SAjBY,SAAS","sourcesContent":["import { customElement, property } from 'lit-element';\r\nimport { Base } from '@spectrum/sp-base';\r\nimport barloaderStyles from './barloader.styles';\r\nimport template from './barloader.template';\r\n\r\n@customElement('sp-barloader')\r\nexport class BarLoader extends Base {\r\n  public static componentStyles = barloaderStyles;\r\n\r\n  @property({ type: Boolean }) standard=false;\r\n  @property({ type: Boolean }) small=false;\r\n  @property({ type: Boolean }) overBackground=false;\r\n  @property({ type: Boolean }) sideLabel = false;\r\n  @property({ type: Boolean }) indeterminate = false;\r\n  @property({ type: Number }) value=0;\r\n  @property({ type: String }) label = \"\";\r\n  @property({ type: Boolean }) positive = false;\r\n  @property({ type: Boolean }) warning = false;\r\n  @property({ type: Boolean }) critical = false;\r\n\r\n  protected render() {\r\n    return template.call(this);\r\n  }\r\n}\r\n\r\ndeclare global {\r\n  interface HTMLElementTagNameMap {\r\n    'sp-barloader': BarLoader;\r\n  }\r\n}\r\n"]}